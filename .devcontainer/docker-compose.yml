name: research-dispatcher

services:
  system:
    hostname: dev
    container_name: research-dispatcher-dev
    build:
      dockerfile: Dockerfile
    command: sleep infinity
    volumes:
      - ../..:/workspaces:cached
      - home:/home/node
    networks:
      - back-tier
      - front-tier

  public-web:
    container_name: public-web
    extends:
      file: docker-compose.base.yml
      service: node-app-base
    environment:
      - SERVICE_NAME=public-web
    command: npx nx run @sektek/public-web:start:dev
    networks:
      - back-tier
      - front-tier

  dispatcher:
    container_name: dispatcher
    depends_on:
      - rabbitmq
    extends:
      file: docker-compose.base.yml
      service: node-app-base
    environment:
      - SERVICE_NAME=dispatcher
    command: npx nx run @sektek/dispatcher:start:dev
    networks:
      - back-tier

  ping-listener:
    container_name: ping-listener
    depends_on:
      - rabbitmq
    extends:
      file: docker-compose.base.yml
      service: node-app-base
    environment:
      - SERVICE_NAME=ping-listener
    command: npx nx run @sektek/ping-listener:start:dev
    networks:
      - back-tier

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dispatcher-mq
    ports:
      - "15672:15672"
    networks:
      - back-tier

  redis:
    image: redis:7.2
    container_name: dispatcher-redis
    volumes:
      - redis:/data
    networks:
      - back-tier

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_USERS_DEFAULT_THEME: "light"
      GF_FEATURE_TOGGLES_ENABLE: "traceqlEditor"
    ports:
      - "3000:3000"
    networks:
      - back-tier
      - front-tier

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: unless-stopped
    depends_on:
      - minio
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./docker/loki/loki-config.yaml:/etc/loki/loki-config.yaml
    networks:
      - back-tier

  agent:
    container_name: agent
    image: grafana/agent:latest
    restart: unless-stopped
    command: run --disable-reporting --server.http.listen-addr=0.0.0.0:12345 /etc/agent/config.river
    depends_on:
      - minio
    environment:
      - AGENT_MODE=flow
    ports:
      - "12345:12345"
    volumes:
      - ./docker/agent/config.river:/etc/agent/config.river
    networks:
      - back-tier
      - front-tier

  minio:
    container_name: minio
    image: minio/minio:latest
    restart: unless-stopped
    command: server --quiet /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: secret-secret
    ports:
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - back-tier

  mimir:
    container_name: mimir
    image: grafana/mimir:latest
    restart: unless-stopped
    command: -config.file=/etc/mimir.yaml
    depends_on:
      - minio
    volumes:
      - ./docker/mimir/mimir.yaml:/etc/mimir.yaml
      - mimir-data:/data
    networks:
      - back-tier

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    restart: unless-stopped
    command: -config.file=/etc/tempo.yaml
    ports:
      - "3200:3200"
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml
    networks:
      - back-tier

volumes:
  home: {}
  redis: {}
  minio-data: {}
  mimir-data: {}

networks:
  back-tier: {}
  front-tier: {}
